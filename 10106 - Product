#include <stdio.h>
#include <iostream>
   
using namespace std;

string reverse(string n)
{
    string r="";
    for(int i=n.length()-1;i>=0;i--) r = r + n[i];
    return r;
}

string add(string n1, string n2)
{
    string r="", b;
    int t1, h=0;
   
    int ln1 = n1.length();
    int ln2 = n2.length();
   
    if(ln1 >= ln2) for(int i = 0; i < ln1-ln2 ; i++) n2 = n2 + '0';
    else for(int i = 0; i < ln2-ln1 ; i++) n1 = n1 + '0';
   
    for(int i=0; i < n1.length() ; i++)
    {
        t1 = (n1[i] - '0') + (n2[i] - '0') + h;
        h=t1/10;
        b[1] = ((t1 % 10) + '0');
        r = r + b[1];
    }
    if(h != 0) r = r + '1';
   
    return r;
}

string remLeadZero(string n)
{
    string r = "";
    int f=1;
    for(int i=0;i<n.length();i++)
    {
        if(f==1 && n[i] == '0'){}
        else
        {
            f = 0;
            r = r + n[i];
        }
    }
    if(r=="") return "0";
    else return r;
}

int main()
{
    string n1, n2;
    while(cin>>n1>>n2)
    {
        string r="";
       
        n1=reverse(n1);
        n2=reverse(n2);
       
        for(int i=0;i<n2.length();i++)
        {
            string a="", b;
            int h=0, t1;
           
            for(int j=0;j != i;j++) a = a + '0';
            for(int j=0;j<n1.length();j++)
            {
                t1 = (n1[j] - '0') * (n2[i] - '0') + h;
               
                h=t1/10;
                b[1] = ((t1 % 10) + '0');
                a = a + b[1];
            }
            if(h != 0)
            {
                b[1] = (h+'0');
                a = a + b[1];
            }
            r = add(r,a);
        }
        r = reverse(r);
        r = remLeadZero(r);
       
        cout<<r<<endl;
    }

    return 0;
}
